-- FortifStratResDiscountAI
-- AI get discount on strategic resource needs for units
--------------------------------------------------------

-- Completely new modifier type
INSERT INTO Types (Type, Kind) VALUES
('CIV_GRANT_STRAT_RES_DISCOUNT_IN_CITIES', 'KIND_MODIFIER'),
('CIV_GRANT_STRAT_RES_DISCOUNT_UPGRADE_UNITS', 'KIND_MODIFIER');

-- New modifier we need an effect for
INSERT INTO DynamicModifiers (ModifierType, CollectionType, EffectType) VALUES
('CIV_GRANT_STRAT_RES_DISCOUNT_IN_CITIES', 'COLLECTION_PLAYER_CITIES', 'EFFECT_ADJUST_CITY_STRATEGIC_RESOURCE_REQUIREMENT_MODIFIER'),
('CIV_GRANT_STRAT_RES_DISCOUNT_UPGRADE_UNITS', 'COLLECTION_OWNER', 'EFFECT_ADJUST_PLAYER_UNIT_UPGRADE_RESOURCE_COST_DISCOUNT');

-- Add the new modifier to the pool
INSERT INTO Modifiers (ModifierId, ModifierType, OwnerRequirementSetId, SubjectRequirementSetId, Permanent) VALUES
('CIV_MINOR_STRAT_RES_DISCOUNT_CITY_PRODUCTION', 'CIV_GRANT_STRAT_RES_DISCOUNT_IN_CITIES', NULL, 'CIV_MINOR_AI', 1),
('CIV_MINOR_STRAT_RES_DISCOUNT_UNIT_UPGRADE', 'CIV_GRANT_STRAT_RES_DISCOUNT_UPGRADE_UNITS', NULL, 'CIV_MINOR_AI', 1),
('CIV_MAJOR_STRAT_RES_DISCOUNT_CITY_PRODUCTION', 'CIV_GRANT_STRAT_RES_DISCOUNT_IN_CITIES', NULL, 'CIV_MAJOR_AI', 1),
('CIV_MAJOR_STRAT_RES_DISCOUNT_UNIT_UPGRADE', 'CIV_GRANT_STRAT_RES_DISCOUNT_UPGRADE_UNITS', NULL, 'CIV_MAJOR_AI', 1);

-- Arguments for our modifiert, the actual numbers
INSERT INTO ModifierArguments (ModifierId, Name, Value) VALUES
('CIV_MINOR_STRAT_RES_DISCOUNT_CITY_PRODUCTION', 'Amount', '25'),
('CIV_MINOR_STRAT_RES_DISCOUNT_UNIT_UPGRADE', 'Amount', '25'),
('CIV_MAJOR_STRAT_RES_DISCOUNT_CITY_PRODUCTION', 'Amount', '25'),
('CIV_MAJOR_STRAT_RES_DISCOUNT_UNIT_UPGRADE', 'Amount', '25');

-- Assign the modifier to the civs as traits
INSERT INTO TraitModifiers (TraitType, ModifierId) VALUES
('MINOR_CIV_DEFAULT_TRAIT', 'CIV_MINOR_STRAT_RES_DISCOUNT_CITY_PRODUCTION'),
('MINOR_CIV_DEFAULT_TRAIT', 'CIV_MINOR_STRAT_RES_DISCOUNT_UNIT_UPGRADE'),
('TRAIT_LEADER_MAJOR_CIV', 'CIV_MAJOR_STRAT_RES_DISCOUNT_CITY_PRODUCTION'),
('TRAIT_LEADER_MAJOR_CIV', 'CIV_MAJOR_STRAT_RES_DISCOUNT_UNIT_UPGRADE');

-- Requirements that need to be met, only AI in this case
INSERT INTO RequirementSets (RequirementSetId, RequirementSetType) VALUES
('CIV_MINOR_AI', 'REQUIREMENTSET_TEST_ALL'),
('CIV_MAJOR_AI', 'REQUIREMENTSET_TEST_ALL');

-- Last but not least, the sets that need to met
INSERT INTO RequirementSetRequirements (RequirementSetId, RequirementId) VALUES
('CIV_MINOR_AI', 'REQUIRES_PLAYER_IS_AI'),
('CIV_MAJOR_AI', 'REQUIRES_PLAYER_IS_AI');
